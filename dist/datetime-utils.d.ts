declare const DatetimeUtils: {
    isValidNumber: (yearNum: unknown, monthNum: unknown, dayNum: unknown) => boolean;
    getDateByYMD: (yearNum: unknown, monthNum: unknown, dayNum: unknown) => Date;
    convertStringToDate: (str: string | null | undefined, whenFailedValue?: Date | null | undefined) => Date | null | undefined;
    convertToDate: (date: string | number | Date | null | undefined, whenFailedValue?: Date | null | undefined) => Date | null | undefined;
    convertDateToString: (date: Date | null | undefined, format?: string) => string;
    datetimeStr: () => string;
    copy: (date: Date) => Date;
    resetTime: (date: Date) => Date;
    getResetedTimeDate: () => Date;
    getDaysDiff: (before: Date | null | undefined, after: Date | null | undefined) => number;
    getDays: (date1: Date | null | undefined, date2: Date | null | undefined) => number;
    getFirstDateAtMonth: (date?: Date) => Date;
    getLastDateAtMonth: (date?: Date) => Date;
    getFirstDateAtYear: (date?: Date) => Date;
    getLastDateAtYear: (date?: Date) => Date;
    validContext: (before: Date | null | undefined, after: Date | null | undefined) => boolean;
    addDay: (date: Date | undefined, add: number) => Date;
    getPrevDate: (date?: Date) => Date;
    getNextDate: (date?: Date) => Date;
    getPrevWeekDate: (date?: Date) => Date;
    getNextWeekDate: (date?: Date) => Date;
    getPrevMonthDate: (date?: Date, sameYearMonth?: boolean) => Date;
    getNextMonthDate: (date?: Date, sameYearMonth?: boolean) => Date;
    getPrevYearDate: (date?: Date, sameYearMonth?: boolean) => Date;
    getNextYearDate: (date?: Date, sameYearMonth?: boolean) => Date;
    equalDate: (date1: Date | null | undefined, date2: Date | null | undefined) => boolean;
    equalDay: (date1: Date | null | undefined, date2: Date | null | undefined) => boolean;
    equalYearMonth: (date1: Date | null | undefined, date2: Date | null | undefined) => boolean;
    equalMonth: (date1: Date | null | undefined, date2: Date | null | undefined) => boolean;
    equalYear: (date1: Date | null | undefined, date2: Date | null | undefined) => boolean;
    equalWeek: (date1: Date | null | undefined, date2: Date | null | undefined) => boolean;
};
export default DatetimeUtils;
